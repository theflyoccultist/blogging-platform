Generate a JWT token with an expiration time (e.g., 1 hour)

require 'jwt'

SECRET_KEY = "your_super_secret_key"

def generate_token(user_id)
  payload = { user_id: user_id, exp: Time.now.to_i + 3600 } # 1 hour expiration
  JWT.encode(payload, SECRET_KEY, 'HS256')
end

Middleware to check if token is still valid

def authenticate_request(token)
  decoded_token = JWT.decode(token, SECRET_KEY, true, algorithm: 'HS256')
  return decoded_token[0] if decoded_token
rescue JWT::ExpiredSignature
  halt 401, "Token expired. Please log in again."
rescue JWT::DecodeError
  halt 401, "Invalid token."
end

Logout? Just delete the token from the frontend

post '/logout' do
  response.set_cookie('auth_token', value: '', expires: Time.at(0), path: '/')
  halt 200, "Logged out successfully."
end